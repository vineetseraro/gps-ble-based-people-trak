{
  "Parameters": {
    "CIDRRange": {
      "Description": "VPCCIDR Range (will be a /16 block)",
      "Type": "String",
      "Default": "10.251.0.0",
      "AllowedValues": ["10.250.0.0", "10.251.0.0"]
    },
    "SSHLocation": {
      "Description":
        " The IP address range that can be used to SSH to the EC2 instances or allow any outside database access",
      "Type": "String",
      "MinLength": "9",
      "MaxLength": "18",
      "Default": "163.47.142.27/32",
      "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
      "ConstraintDescription": "must be a valid IP CIDR range of the form x.x.x.x/x."
    }
  },
  "Mappings": {
    "VPCRanges": {
      "10.250.0.0": {
        "PublicSubnetAZ1": "10.250.0.0/22",
        "PrivateSubnetAZ1": "10.250.32.0/21"
      },
      "10.251.0.0": {
        "PublicSubnetAZ1": "10.251.0.0/22",
        "PrivateSubnetAZ1": "10.251.32.0/21"
      }
    }
  },
  "Resources": {
    "VPCBase": {
      "Type": "AWS::EC2::VPC",
      "Properties": {
        "CidrBlock": { "Fn::Join": ["", [{ "Ref": "CIDRRange" }, "/16"]] },
        "EnableDnsSupport": "True",
        "EnableDnsHostnames": "True",
        "Tags": [
          { "Key": "Name", "Value": { "Fn::Join": ["", [{ "Ref": "AWS::StackName" }, "-VPC"]] } }
        ]
      }
    },
    "PublicNet": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "AvailabilityZone": { "Fn::Select": ["0", { "Fn::GetAZs": { "Ref": "AWS::Region" } }] },
        "CidrBlock": { "Fn::FindInMap": ["VPCRanges", { "Ref": "CIDRRange" }, "PublicSubnetAZ1"] },
        "MapPublicIpOnLaunch": "True",
        "Tags": [
          {
            "Key": "Name",
            "Value": { "Fn::Join": ["", [{ "Ref": "AWS::StackName" }, "-PublicNet"]] }
          },
          { "Key": "Network", "Value": "public" }
        ],
        "VpcId": { "Ref": "VPCBase" }
      }
    },
    "PrivateNet": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "AvailabilityZone": { "Fn::Select": ["0", { "Fn::GetAZs": { "Ref": "AWS::Region" } }] },
        "CidrBlock": { "Fn::FindInMap": ["VPCRanges", { "Ref": "CIDRRange" }, "PrivateSubnetAZ1"] },
        "MapPublicIpOnLaunch": "False",
        "Tags": [
          {
            "Key": "Name",
            "Value": { "Fn::Join": ["", [{ "Ref": "AWS::StackName" }, "-PrivateNet"]] }
          },
          { "Key": "Network", "Value": "private" }
        ],
        "VpcId": { "Ref": "VPCBase" }
      }
    },
    "IGWBase": {
      "Type": "AWS::EC2::InternetGateway",
      "Properties": {
        "Tags": [
          { "Key": "Name", "Value": { "Fn::Join": ["", [{ "Ref": "AWS::StackName" }, "-IGW"]] } }
        ]
      }
    },
    "VGAIGWBase": {
      "Type": "AWS::EC2::VPCGatewayAttachment",
      "Properties": {
        "InternetGatewayId": { "Ref": "IGWBase" },
        "VpcId": { "Ref": "VPCBase" }
      }
    },
    "RouteTablePublic": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": { "Ref": "VPCBase" },
        "Tags": [
          {
            "Key": "Name",
            "Value": { "Fn::Join": ["", [{ "Ref": "AWS::StackName" }, "-PublicRT"]] }
          }
        ]
      }
    },
    "RouteTablePrivate": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": { "Ref": "VPCBase" },
        "Tags": [
          {
            "Key": "Name",
            "Value": { "Fn::Join": ["", [{ "Ref": "AWS::StackName" }, "-PrivateRT"]] }
          }
        ]
      }
    },
    "RoutePublicDefault": {
      "DependsOn": ["VGAIGWBase"],
      "Type": "AWS::EC2::Route",
      "Properties": {
        "RouteTableId": { "Ref": "RouteTablePublic" },
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": { "Ref": "IGWBase" }
      }
    },
    "RouteAssociationPublicDefault": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "SubnetId": { "Ref": "PublicNet" },
        "RouteTableId": { "Ref": "RouteTablePublic" }
      }
    },
    "RouteAssociationPrivateDefault": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "SubnetId": { "Ref": "PrivateNet" },
        "RouteTableId": { "Ref": "RouteTablePrivate" }
      }
    },
    "NAT": {
      "Type": "AWS::EC2::NatGateway",
      "DependsOn": "VGAIGWBase",
      "Properties": {
        "AllocationId": { "Fn::GetAtt": ["EIPNAT", "AllocationId"] },
        "SubnetId": { "Ref": "PublicNet" },
        "Tags": [
          { "Key": "Name", "Value": { "Fn::Join": ["", [{ "Ref": "AWS::StackName" }, "-NAT"]] } }
        ]
      }
    },
    "EIPNAT": {
      "Type": "AWS::EC2::EIP",
      "Properties": {
        "Domain": "vpc"
      }
    },
    "NATRoute": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "RouteTableId": { "Ref": "RouteTablePrivate" },
        "DestinationCidrBlock": "0.0.0.0/0",
        "NatGatewayId": { "Ref": "NAT" }
      }
    },
    "LambdaSecurityGroup": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "security group for lambda to referance all lambdas as one",
        "VpcId": { "Ref": "VPCBase" },
        "SecurityGroupIngress": [],
        "Tags": [
          {
            "Key": "Name",
            "Value": { "Fn::Join": ["", [{ "Ref": "AWS::StackName" }, "-LambdaSG"]] }
          }
        ]
      }
    },
    "MongoSecurityGroup": {
      "DependsOn": ["LambdaSecurityGroup"],
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "security group for lambda to referance all lambdas as one",
        "VpcId": { "Ref": "VPCBase" },
        "SecurityGroupIngress": [
          {
            "IpProtocol": "tcp",
            "FromPort": "22",
            "ToPort": "22",
            "CidrIp": { "Ref": "SSHLocation" }
          },
          {
            "IpProtocol": "tcp",
            "FromPort": "27017",
            "ToPort": "27017",
            "SourceSecurityGroupId": { "Ref": "LambdaSecurityGroup" }
          },
          {
            "IpProtocol": "tcp",
            "FromPort": "27017",
            "ToPort": "27017",
            "CidrIp": { "Ref": "SSHLocation" }
          }
        ],
        "Tags": [
          {
            "Key": "Name",
            "Value": { "Fn::Join": ["", [{ "Ref": "AWS::StackName" }, "-MongoSG"]] }
          }
        ]
      }
    },
    "ECacheSecurityGroup": {
      "DependsOn": ["LambdaSecurityGroup"],
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "security group for lambda to referance all lambdas as one",
        "VpcId": { "Ref": "VPCBase" },
        "SecurityGroupIngress": [
          {
            "IpProtocol": "tcp",
            "FromPort": "22",
            "ToPort": "22",
            "CidrIp": { "Ref": "SSHLocation" }
          },
          {
            "IpProtocol": "tcp",
            "FromPort": "11211",
            "ToPort": "11211",
            "SourceSecurityGroupId": { "Ref": "LambdaSecurityGroup" }
          },
          {
            "IpProtocol": "tcp",
            "FromPort": "11211",
            "ToPort": "11211",
            "CidrIp": { "Ref": "SSHLocation" }
          }
        ],
        "Tags": [
          {
            "Key": "Name",
            "Value": { "Fn::Join": ["", [{ "Ref": "AWS::StackName" }, "-ECacheSG"]] }
          }
        ]
      }
    }
  },
  "Outputs": {
    "VPCID": { "Value": { "Ref": "VPCBase" } },
    "ElasticIP": { "Value": { "Ref": "EIPNAT" } },
    "SubnetPublic": { "Value": { "Ref": "PublicNet" } },
    "SubnetPrivate": { "Value": { "Ref": "PrivateNet" } },
    "DefaultSG": { "Value": { "Fn::GetAtt": ["VPCBase", "DefaultSecurityGroup"] } },
    "LambdaSecurityGroup123": { "Value": { "Ref": "LambdaSecurityGroup" } },
    "MongoSecurityGroup123": { "Value": { "Ref": "MongoSecurityGroup" } },
    "ECacheSecurityGroup123": { "Value": { "Ref": "ECacheSecurityGroup" } }
  }
}
